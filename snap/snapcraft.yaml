name: scrcpy
title: scrcpy [unofficial]
summary: Display and control your Android device
description: |
  This application provides display and control of Android devices connected on USB (or over TCP/IP). It does not require any root access.  It works on GNU/Linux, Windows and MacOS.

  This is an unofficial scrcpy distribution.  Please report any issues to the snap's own issue tracker: https://github.com/sisco311/scrcpy-snap/issues

  The source code of scrcpy itself can be found at: https://github.com/Genymobile/scrcpy

adopt-info: scrcpy
license: Apache-2.0
grade: stable
confinement: strict
compression: lzo

base: core24

platforms:
  amd64:
    build-on: [amd64]
    build-for: [amd64]
  arm64:
    build-on: [arm64]
    build-for: [arm64]
  armhf:
    build-on: [armhf]
    build-for: [armhf]

apps:
  scrcpy:
    command: usr/local/bin/scrcpy
    command-chain:
      - bin/scrcpy-launch
    completer: usr/local/share/bash-completion/completions/scrcpy
    environment:
      LD_LIBRARY_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/android:${SNAP}/gnome-platform/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/blas:${SNAP}/gnome-platform/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/lapack:${SNAP}/gnome-platform/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/libproxy:${LD_LIBRARY_PATH}
    plugs:
      - adb-support
      - alsa
      - audio-playback
      - audio-record
      - camera
      - home
      - network
      - network-bind
      - pulseaudio
      - raw-usb
      - unity7
    extensions:
      - gnome

  adb:
    command: usr/bin/adb
    environment:
      LD_LIBRARY_PATH: ${SNAP}/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/android:${SNAP}/gnome-platform/usr/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}:${LD_LIBRARY_PATH}
    plugs:
      - network-bind
      - raw-usb

layout:
  /usr/local/share/icons:
    symlink: $SNAP/usr/local/share/icons
  /usr/local/share/scrcpy:
    symlink: $SNAP/usr/local/share/scrcpy
  /usr/share/alsa:
    bind: $SNAP/usr/share/alsa

parts:
  scrcpy-server:
    plugin: nil
    build-packages:
      - curl
      - jq
    override-pull: SCRCPY_SERVER_VERSION=3.3.1 "${CRAFT_PROJECT_DIR}/snap/local/scriptlets/pull-scrcpy-server.sh"
    override-build: |
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/usr/local/share/scrcpy"
      cp scrcpy-server-v* "${SNAPCRAFT_PART_INSTALL}/usr/local/share/scrcpy/scrcpy-server"

  scrcpy:
    source: https://github.com/Genymobile/scrcpy.git
    source-tag: v3.3.1
    plugin: meson
    meson-parameters:
      - --buildtype=release
      - --strip
      - -Db_lto=true
      - -Dcompile_server=false
    override-pull: |
      craftctl default
      craftctl set version="$(git describe --tag)"
    build-snaps:
      - gnome-46-2404-sdk
    build-packages:
      - libavcodec-dev
      - libavdevice-dev
      - libavformat-dev
      - libavutil-dev
      - libsdl2-dev
      - libswresample-dev
      - libusb-1.0-0-dev
    stage-packages:
      - adb
      - ffmpeg
      - libasound2
      - libglu1-mesa
      - libglut3.12
      - libsdl2-2.0-0

      # Provided by gnome-platform
      #- libblas3
      #- libslang2
      #- libusb-1.0-0
    stage:
      - -usr/lib/*/libcaca++.so*
      - -usr/lib/*/libcjson_utils.so*
      - -usr/lib/*/libcairo-gobject.so*
      - -usr/lib/*/libcairo.so*
      - -usr/lib/*/libfftw3_omp.so*
      - -usr/lib/*/libfftw3_threads.so*
      - -usr/lib/*/libflite_cmu_grapheme_lang.so*
      - -usr/lib/*/libflite_cmu_grapheme_lex.so*
      - -usr/lib/*/libflite_cmu_indic_lang.so*
      - -usr/lib/*/libflite_cmu_indic_lex.so*
      - -usr/lib/*/libflite_cmu_time_awb.so*
      - -usr/lib/*/libgdk_pixbuf-*.so*
      - -usr/lib/*/libharfbuzz.so*
      - -usr/lib/*/libhwy_contrib.so*
      - -usr/lib/*/libhwy_test.so*
      - -usr/lib/*/libicui18n.so*
      - -usr/lib/*/libicuio.so*
      - -usr/lib/*/libicutu.so*
      - -usr/lib/*/libicutest.so*
      - -usr/lib/*/libjacknet.so*
      - -usr/lib/*/libjackserver.so*
      - -usr/lib/*/liboss4-salsa.so*
      - -usr/lib/*/libpango-*.so*
      - -usr/lib/*/libpangocairo-*.so*
      - -usr/lib/*/libpangoft*.so*
      - -usr/lib/*/libpixman-*.so*
      - -usr/lib/*/libpulse-simple.so*
      - -usr/lib/*/librsvg*.so*
      - -usr/lib/*/libsphinxad.so*
      - -usr/lib/*/libtheora.so*
      - -usr/lib/*/libzvbi-chains.so*
      - -usr/share/fonts

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
      - -bin/README.*
      - -bin/sdl2-notice

  launchers-notice:
    source: snap/local/launchers/sdl2-notice
    plugin: nil
    override-build: |
      craftctl default
      mkdir -p "${SNAPCRAFT_PART_INSTALL}/bin"

      # NOTE: The lack of quotes around the `pkg-config` command substitution is intentional.
      gcc -o "${SNAPCRAFT_PART_INSTALL}/bin/sdl2-notice" "${CRAFT_PROJECT_DIR}/snap/local/launchers/sdl2-notice/sdl2-notice.c" $(pkg-config --cflags --libs sdl2 SDL2_ttf)
    build-snaps:
      - gnome-46-2404-sdk
    build-packages:
      - libsdl2-dev
      - libsdl2-ttf-dev
    stage-packages:
      - libsdl2-2.0-0
      - libsdl2-ttf-2.0-0
    stage:
      # WORKAROUND: Avoid the "Parts 'scrcpy' and 'launchers-notice' list the following files, but with different contents or permissions" error on armhf
      # On that architecture the libasound library is diverted to liboss4-salsa hence the contents of the file is different.
      - -usr/lib/*/libasound.so.2*

      - -usr/lib/*/libharfbuzz.so*
      - -usr/lib/*/libicui18n.so*
      - -usr/lib/*/libicuio.so*
      - -usr/lib/*/libicutu.so*
      - -usr/lib/*/libicutest.so*
      - -usr/lib/*/libpulse-simple.so*

  cleanup:
    after:
      - scrcpy
      - launchers-notice
    plugin: nil
    build-snaps:
      - core24
      - gnome-46-2404
    override-prime: |
      set -eu

      for snap in core24 gnome-46-2404; do
        if ! "${CRAFT_PROJECT_DIR}/snap/local/scriptlets/drop-content-snap-duplicate-files.sh" "${snap}"; then
          printf \
              'Error: Unable to drop the duplicate files in the snap installation directory "%s".\n' \
              "${snap}" \
              1>&2
          exit 1
        fi
      done

plugs:
  adb:
    interface: content
    target: $SNAP/usr/bin

lint:
  ignore:
    - library:
        # Required by the SDL2 library to prevent the "ERROR: Could not create renderer: Couldn't find matching render driver" error
        - usr/lib/*/libGLX_mesa.so*
        - usr/lib/*/libxcb-glx.so*

        # Workaround for the "Parts 'scrcpy' and 'launchers-notice' list the following files, but with different contents or permissions" error on armhf
        - usr/lib/*/libasound.so.2*

        # Required for core functionality at least on amd64 architecture
        # If not staged, the application will fail to start with the following error:
        # "ERROR: Could not create renderer: Couldn't find matching render driver"
        - usr/lib/*/libXxf86vm.so*
